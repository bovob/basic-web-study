/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-10 09:15:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex01_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <title>JSP ex01</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>JSP 구동원리</h1>\r\n");
      out.write("<pre style=\"background-color: #f5f5f5; border: 1px solid #ccc; padding: 10px;\">\r\n");
      out.write("<h3>1) 웹 브라우저 ===> 서블릿 컨테이너</h3>\r\n");
      out.write("   - JSP 실행 요청\r\n");
      out.write("     예) http://localhost:8888/jsp/ex01.jsp\r\n");
      out.write("<h3>2) 서블릿 컨테이너가 실행</h3>\r\n");
      out.write("   1. JSP의 서블릿 컨테이너 객체를 찾는다.\r\n");
      out.write("   2. 서블릿 객체를 호출한다.\r\n");
      out.write("      service() ---> _jspService()\r\n");
      out.write("   3. 서블릿 객체가 없을시 JSP 엔진을 이용하여 JSP 파일이용하여 서블릿 자바 소스 파일을 생성한다.\r\n");
      out.write("   4. 자바 컴파일러가 소스 파일을 컴파일 한다.\r\n");
      out.write("   5. 서블릿 객체가 생성된다.\r\n");
      out.write("      init() ---> _jspService()\r\n");
      out.write("   6. 이미 컴파일 되어 있다면 5번이 반복된다.\r\n");
      out.write("<h3>3) 서블릿 컨테이너 ===> 웹 브라우저</h3>\r\n");
      out.write("   - 서블릿 실행 결과 응답\r\n");
      out.write("<p><h3>JSP 파일을 가지고 생성한 서블릿 소스(.jsva)와 클래스 (.class)의 위치</h3>\r\n");
      out.write("  - org.eclipse.wst.server.core/tmpx/work</p>\r\n");
      out.write("<h3>정리</h3>\r\n");
      out.write("  * JSP 파일은 Python이나 PHP 처럼 스크립트가 인터프리팅 되는 것이 아니다.\r\n");
      out.write("  * JSP 엔진의 역할은 서블릿 클래스를 생성하는 것이다.\r\n");
      out.write("  * 즉 JSP 파일 자체가 실행되는 것이 아니다.\r\n");
      out.write("  * 서블릿 클래스를 만드는 재료이며 `틀`이라 `템플릿(template)`라고 부른다.\r\n");
      out.write("<h3>JSP 엔진이 서블릿을 만들 때 지켜야할 규칙</h3>\r\n");
      out.write("  - JSP 파일을 가지고 서블릿을 만들 땐 HttpJspPage를 구현해야 한다.\r\n");
      out.write("  - 클래스 계층도\r\n");
      out.write("    Servlet\r\n");
      out.write("      ㄴ init(ServletConfig):void\r\n");
      out.write("      ㄴ destory():void\r\n");
      out.write("      ㄴ service(ServletRequest, ServletResponse):void\r\n");
      out.write("      ㄴ getServletInfo():String\r\n");
      out.write("      ㄴ getServletConfig():ServletConfig\r\n");
      out.write("      +---> JspPage\r\n");
      out.write("              ㄴ jspInit():void\r\n");
      out.write("              ㄴ jspDestroy():void\r\n");
      out.write("              +---> HttpJspPage\r\n");
      out.write("                      ㄴ _jspService(HttpServletRequest, HttpServletResponse):void\r\n");
      out.write("</pre>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
